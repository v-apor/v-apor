1) 31/07/2020: Hello World!

2) 01/08/2020: Created a project based on Automata Theory: Deterministic Finite Acceptor.
	       - It either accepts or rejects a input string after parsing it through the states
                 based on defined transactions.
	       - First I created a mental model of how would the things be handled, I thought about 
		 utilising OOP paradigm for having seperate object for states.
	       - Then had a rough model on paper about class needed and it's member elements & functions.
	       - While coding it, I made a few changes.
	       - Although those changes made it a bit efficient but I made it a bit complex, also it got 
                 deviated from my object based design. NOT a good thing (need to fix this)
	       - I should complete every aspects in paper before coding.
	       - I have to mod it to hape proper object based design and declutter a bit
	       - Also need to add mechanism to handle exceptions and errors.
		
3) 02/08/2020: Some simple mathematical problems (4X) from GeeksForGeeks.

4) 03/08/2020: GCD and LCM using Euclid's Algorithm. + Adding Fractional Terms

5) 04-06/08/2020: Had to travel from Durg to Pune round trip to get my stuffs, long road trip.

6) 07/08/2020: nPr & nCr

7) 08/08/2020: CodeForces Div3 round 661: A&B solved, B failed (Post Contest Self Competition)

8) 09/08/2020: Solved CF R661:C after looking at the editorial. Learning: Always carefully inspect the input. 
	       If it is small we can take brute force approach!

9) 10/08/2020: + CTCI: Stack Problem: Set of Stacks.
	       + CodeChef Beginner Problem, to check Acceptance Criteria & Requirements. I'm thinking of solving Code Chef's long problems.
	       + CodeChef Aug2020Long Challange (2x)
	       + Read about memory mgmt and primitive types in Java(Thinking in Java)

10) 11/08/2020: + CodeChef Aug2020Long (2x: 1AC, 1WA), Feeling good for the WA one, solved locally(it was a good and a bit challanging problem for me)
		+ Learnt about lexicographicaly small order (order like a dictionary a->z)
		+ Read about Java's scope and it's comparisions with C++.
		+ javadoc (To get documentations out of comments)
		+ CTCI problem: Implement Queue using 2 stacks.
		+ Started GameDev Unity: Basics of unity components

11) 12/08/2020: + CodeChef Aug2020Long: Wedding. Failed to come up with a solution, we need to minimise the cost, i've developed an approach but it doesn't 
		  work considering any person (not necessasory neighbours) can come into argument. (Feeling a bit scared!!! Man it'll take some thinking)
		  problem: https://www.codechef.com/AUG20B/problems/CHEFWED
		+ Java concepts practice:
			- Default initialization of class members
			- static variable test for multiple objects, 
			- Wrapper classes (autoboxing/unboxing), use of Wrapper class (one good use Integer.parseInt(String),
			  where Integer wrapper class comes to use for converting String for an int)
			- main()'s String[] args test, where args is array of String passed through command-line terminal while executing program.
		+ GameDev: C# basics and integration with unity
		+ CodeChef July2020Long (Archive) (2x) First 2, had a mistake on first (should have taken total as long but took int)
			- https://www.codechef.com/JULY20B/problems/CHEFSTR1    (comment above)
			- https://www.codechef.com/JULY20B/problems/CRDGAME
		+ Downloading Gimp to create game's art (stuck at 97.17%) and i've reached my daily data cap. (Finally downloaded last 2.83% @ 6.4-8kbps!)

12) 13/08/2020: + GameDev: 
			- Created Player and Enemy Character Art.
			- Worked with RigidBody and Box Collider component (Inbuilt) 
			- Added player movement 
			- Animated Player Character
			- Added Player health and enemy collision damage
		+ System Administration:
			- Windows server user managment and access control
			- netstat command
		+ GFG easy problem: check if array is sorted or not