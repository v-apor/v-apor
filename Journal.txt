1) 31/07/2020: Hello World!

2) 01/08/2020: Created a project based on Automata Theory: Deterministic Finite Acceptor.
	       - It either accepts or rejects a input string after parsing it through the states
                 based on defined transactions.
	       - First I created a mental model of how would the things be handled, I thought about 
		 utilising OOP paradigm for having seperate object for states.
	       - Then had a rough model on paper about class needed and it's member elements & functions.
	       - While coding it, I made a few changes.
	       - Although those changes made it a bit efficient but I made it a bit complex, also it got 
                 deviated from my object based design. NOT a good thing (need to fix this)
	       - I should complete every aspects in paper before coding.
	       - I have to mod it to hape proper object based design and declutter a bit
	       - Also need to add mechanism to handle exceptions and errors.
		
3) 02/08/2020: Some simple mathematical problems (4X) from GeeksForGeeks.

4) 03/08/2020: GCD and LCM using Euclid's Algorithm. + Adding Fractional Terms

5) 04-06/08/2020: Had to travel from Durg to Pune round trip to get my stuffs, long road trip.

6) 07/08/2020: nPr & nCr

7) 08/08/2020: CodeForces Div3 round 661: A&B solved, B failed (Post Contest Self Competition)

8) 09/08/2020: Solved CF R661:C after looking at the editorial. Learning: Always carefully inspect the input. 
	       If it is small we can take brute force approach!

9) 10/08/2020: + CTCI: Stack Problem: Set of Stacks.
	       + CodeChef Beginner Problem, to check Acceptance Criteria & Requirements. I'm thinking of solving Code Chef's long problems.
	       + CodeChef Aug2020Long Challange (2x)
	       + Read about memory mgmt and primitive types in Java(Thinking in Java)

10) 11/08/2020: + CodeChef Aug2020Long (2x: 1AC, 1WA), Feeling good for the WA one, solved locally(it was a good and a bit challanging problem for me)
		+ Learnt about lexicographicaly small order (order like a dictionary a->z)
		+ Read about Java's scope and it's comparisions with C++.
		+ javadoc (To get documentations out of comments)
		+ CTCI problem: Implement Queue using 2 stacks.
		+ Started GameDev Unity: Basics of unity components

11) 12/08/2020: + CodeChef Aug2020Long: Wedding. Failed to come up with a solution, we need to minimise the cost, i've developed an approach but it doesn't 
		  work considering any person (not necessasory neighbours) can come into argument. (Feeling a bit scared!!! Man it'll take some thinking)
		  problem: https://www.codechef.com/AUG20B/problems/CHEFWED
		+ Java concepts practice:
			- Default initialization of class members
			- static variable test for multiple objects, 
			- Wrapper classes (autoboxing/unboxing), use of Wrapper class (one good use Integer.parseInt(String),
			  where Integer wrapper class comes to use for converting String for an int)
			- main()'s String[] args test, where args is array of String passed through command-line terminal while executing program.
		+ GameDev: C# basics and integration with unity
		+ CodeChef July2020Long (Archive) (2x) First 2, had a mistake on first (should have taken total as long but took int)
			- https://www.codechef.com/JULY20B/problems/CHEFSTR1    (comment above)
			- https://www.codechef.com/JULY20B/problems/CRDGAME
		+ Downloading Gimp to create game's art (stuck at 97.17%) and i've reached my daily data cap. (Finally downloaded last 2.83% @ 6.4-8kbps!)

12) 13/08/2020: + GameDev: 
			- Created Player and Enemy Character Art.
			- Worked with RigidBody and Box Collider component (Inbuilt) 
			- Added player movement 
			- Animated Player Character
			- Added Player health and enemy collision damage
		+ System Administration:
			- Windows server user managment and access control
			- netstat command
		+ GFG easy problem: check if array is sorted or not

13) 14/08/2020: + CodeChef July long Chess problem: Put not the most good structured code but it works and is efficient;
		  	- there are way's to make the code more readable, i'll try to make my code more readable going forward.
		+ CTCI: Sorting a Stack, good one (used one other stack and one int variable)
		+ Java: 
			- Control flow (skim)
			- constructors and 'this' keyword!
		+ Game Dev: Enemy Spawning Mechanics (Random Location + Spawn Rate)

14) 15/08/2020: + CodeChef: 2020JulyLong: Finding a missing vertex from set of rectangles. (XOR experience helped to find unique)
		+ CodeForces 1100 Implementation Problem: This problem had a lot of branches and I made a mistake naming a variable,
			- Note: Always use unambiguous names instead of array when possible (here we only had 3 variables and I used array, BAD IDEA)

15) 16/08/2020: + Networking (Just Ping tbh) on Windows10 as host and Ubuntu as Guest on Virtual-box
			- Learned about NAT (Way to save IP addresses if only being used privately, from what I understood)
			- Changed network of guest to bridged (Need to know more about this)
			- Learnt about changing the inbound rules of windows (Allowed Files and Printer rule required for pinging)
		+ Started with github pages, created a repository and uploaded index.md page (Hello World!), it worked :)

16) 17/08/2020: + Spent too much time on CodeChef AugLong (check 11/08/2020) lexicographicaly problem; I got my previous mistake, but even after fixing i'm getting WA,
		  IDK what's wrong!
		+ Got results of AugLongChallange, Got Rank: 15869, Points: 300
		+ CodeChef June2020Long 1st problem AC

17) 18/08/2020: + CodeChef JuneLong2020 (2x), I did a mistake on (https://www.codechef.com/JUNE20B/problems/CHFICRM) where after breaking from inner loop, I was not taking,
		  care of the input remaining; fixed it later!
		+ Initializations in java and Emums
		+ Tried to solve (https://www.codechef.com/JUNE20B/problems/EOEO) it's easy but I couldn't solve, maybe cos it's late & I'm sleepyzzz

18) 19/08/2020: + Solved CodeChef (above) taking help from editorial, it had a very elegent and clean solution! Good Problem (problem-solving/CodeChef/June2020Long/TJerry.java)
		+ CodeChef June2020Long Matrix Problem (repo/EvenMat.java) (AC, but I didn't follow DRY: Do Not Reapeat Yourself)
		+ Just noticed 2* mark in my CodeChef profile, must be b'cos of Aug2020Long
		+ Java Packages (Test Failed, need to explore more)
		+ CTCI/CatsNDogs, LinkedList (Naive) and Queue (Efficient implementation).
		+ Just got to know what is "md" (as in Github's readme.md is markdown!!)
		+ Added Github profile picture, added description and modified landing page's readme.

19) 20/08/2020: + CodeChef May2020Long Easy (https://www.codechef.com/problems/COVID19), fixed through editorial.
			- Note: Use extra DS if required to simplify things, first priority is to solve/ not to find most efficient solution.
		+ Access Specifiers in Java
		+ CodeChef May2020 Isolation.
		+ Something New: PowerShell Script to compile and run a java code.

20) 21/08/2020: + Finding duplicate in an array LeetCode 287 without modifying array and using only O(1) space.
			- Man this is difficult, I can solve it using frequency array but it takes O(n) space
			- There is intuitive approach using 2 pointer and cycle (got to know from editorial/youtube)
			- I'm not able to get the concept, need to give it more time
			- Solved it using editorial
			- It's implementation is called Floyd's method (Hare & Turtle), it only works for this exact problem (constraints included) 
			- I know how to solve using this approach but don't know why it works (I understood the finding if it's cycle or not part, nothing after that)
			- BTW checked out Joma (YouTubes) cool video on "If programming was Anime". It's based around solving this problem!! 
		+ New: Python Testing (Unit): PyTest
		+ Composition (Nothing New Here, just using other class objects in new class definition) 
		+ toString() This is cool, gotta explore more (it's way define what happens if you print an object of a class)